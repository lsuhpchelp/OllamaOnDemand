[
    {
        "name" :                    "breaker", 
        "component" :               "Markdown",
        "component_init" : {
            "value":                "### Load time parameters"    
        }
    },
    {
        "name" :                    "breaker", 
        "component" :               "Markdown",
        "component_init" : {
            "value":                "---"    
        }
    },
    {
        "name" :                    "numa", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Enable Non-Uniform Memory Access)"
        }
    },
    {
        "name" :                    "num_ctx", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Context window length)",
            "minimum":              0,
            "precision":            0    
        }
    },
    {
        "name" :                    "num_batch", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Prompt token batch size)",
            "minimum":              0,
            "precision":            0    
        }
    },
    {
        "name" :                    "num_gpu", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Number of layers to offload to GPU)",
            "minimum":              0,
            "precision":            0    
        }
    },
    {
        "name" :                    "main_gpu", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Primary GPU index)",
            "minimum":              0,
            "precision":            0    
        }
    },
    {
        "name" :                    "low_vram", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Enable low VRAM mode. May offload more to GPU)"
        }
    },
    {
        "name" :                    "f16_kv", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Store key/value cache in float16 instead of float32)"
        }
    },
    {
        "name" :                    "logits_all", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Return logits for all tokens instead of choosing from probabilities)"
        }
    },
    {
        "name" :                    "vocab_only", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Load only the vocabulary, not full weights)"
        }
    },
    {
        "name" :                    "use_mmap", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Use memory-map model weights instead of loading full model)"
        }
    },
    {
        "name" :                    "use_mlock", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Lock model weights in memory, avoid paging/swapping)"
        }
    },
    {
        "name" :                    "embedding_only", 
        "component" :               "Checkbox",
        "component_init" : {
            "label":                "(Load model in embedding mode only, no text generation)"
        }
    },
    {
        "name" :                    "num_thread", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Number of CPU threads used for model inference)",
            "minimum":              0,
            "precision":            0    
        }
    },
    {
        "name" :                    "breaker", 
        "component" :               "Markdown",
        "component_init" : {
            "value":                " "    
        }
    },
    {
        "name" :                    "breaker", 
        "component" :               "Markdown",
        "component_init" : {
            "value":                "### Run time parameters"    
        }
    },
    {
        "name" :                    "breaker", 
        "component" :               "Markdown",
        "component_init" : {
            "value":                "---"    
        }
    },
    {
        "name" :                    "num_predict", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Maximum number of tokens)",
            "minimum":              0,
            "precision":            0      
        }
    },
    {
        "name" :                    "stop", 
        "component" :               "Textbox",
        "component_init" : {
            "label":                "(Stop sequence. Seperated by \",\")"
        }
    },
    {
        "name" :                    "temperature",
        "component" :               "Slider",
        "component_init" : { 
            "label":                "(Randomness)",
            "minimum":              0,
            "maximum":              2,
            "show_reset_button":    false
        }
    },
    {
        "name" :                    "top_p", 
        "component" :               "Slider",
        "component_init" : {
            "label":                "(Nucleus sampling)",
            "minimum":              0,
            "maximum":              1,
            "show_reset_button":    false
        }
    },
    {
        "name" :                    "top_k", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Considers only top K next tokens)",
            "minimum":              0,
            "precision":            0      
        }
    },
    {
        "name" :                    "presence_penalty", 
        "component" :               "Slider",
        "component_init" : {
            "label":                "(Penalty for repeating tokens)",
            "minimum":              -2,
            "maximum":              2,
            "show_reset_button":    false
        }
    },
    {
        "name" :                    "frequency_penalty", 
        "component" :               "Slider",
        "component_init" : {
            "label":                "(Penalty for frequent tokens)",
            "minimum":              -2,
            "maximum":              2,
            "show_reset_button":    false
        }
    },
    {
        "name" :                    "seed", 
        "component" :               "Number",
        "component_init" : {
            "label":                "(Random seed)",
            "precision":            0      
        }
    }
]
